@mixin from-cell($position) {
	.grid {
		> *.from-#{$position} {
			grid-column-start: $position;
		}
	}
}

@mixin to-cell($position) {
	.grid {
		> *.to-#{$position} {
			grid-column-end: $position + 1;
		}
	}
}

@mixin cell-row($count) {
	.grid {
		> *.row-#{$count} {
			grid-row: $count;
		}
	}
}

@if $compile-grid {
	.grid {
		display: grid;
		
		&:not(.spaced) {
			grid-gap: 0;
			&.col-4 {
				grid-template-columns: repeat(4, 25%);
			}
			&.col-8 {
				grid-template-columns: repeat(8, 12.5%);
			}
			&.col-12 {
				grid-template-columns: repeat(12, calc(100% / 12));
			}
		}
		&.spaced {
			grid-gap: 1em;
			&.col-4 {
				grid-template-columns: repeat(4, calc(25% - (3em / 4)));
			}
			&.col-8 {
				grid-template-columns: repeat(8, calc(12.5% - (7em / 8)));
			}
			&.col-12 {
				grid-template-columns: repeat(12, calc((100% / 12) - (11em / 8)));
			}
		}
	}

	@for $i from 1 to 12 {
		@include from-cell($i);
		@include to-cell($i);
		@include cell-row($i);
	}
}